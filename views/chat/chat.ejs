<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat với <%= employee.username %></title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KyZXEJJ3Y5f6hBh5y+KnujsnB2dxjrrlO8TbFGcOS2U5xJlq8BwaC8g6ttz5aXyF" crossorigin="anonymous">

    <!-- Icon Material Design -->
    <link rel="stylesheet" href="/stylesheets/assets/vendors/mdi/css/materialdesignicons.min.css">

    <!-- Optional custom CSS -->
    <style>
        body {
            background-color: #f7f7f7;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .container {
            margin-top: 50px;
            max-width: 800px;
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        h2 {
            font-size: 1.75rem;
            font-weight: 600;
            margin-bottom: 20px;
            color: #343a40;
        }

        #messages {
            border: 1px solid #ddd;
            padding: 15px;
            height: 350px;
            overflow-y: auto;
            background-color: #f9f9f9;
            border-radius: 10px;
            box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        .message {
            margin-bottom: 12px;
            padding: 10px;
            border-radius: 10px;
            max-width: 80%;
            font-size: 1rem;
            line-height: 1.5;
        }

        .message.user {
            background-color: #e0f7fa;
            align-self: flex-end;
            color: #00796b;
        }

        .message.other {
            background-color: #f1f1f1;
            align-self: flex-start;
            color: #333;
        }

        .input-group {
            margin-top: 20px;
        }

        #messageInput {
            border-radius: 20px;
            padding: 10px;
            width: 80%;
            border: 1px solid #ddd;
            font-size: 1rem;
            box-shadow: inset 0 1px 4px rgba(0, 0, 0, 0.1);
        }

        #sendMessage {
            border-radius: 50%;
            padding: 12px;
            border: none;
            background-color: #007bff;
            color: #fff;
            font-size: 1.5rem;
            cursor: pointer;
            transition: background-color 0.3s;
            margin-left: 10px;
        }

        #sendMessage:hover {
            background-color: #0056b3;
        }

        .input-group button {
            border-radius: 50%;
            padding: 10px 16px;
            background-color: #007bff;
            color: #fff;
            border: none;
            font-size: 1.5rem;
        }
    </style>
</head>

<body>
    <div class="container">
        <h2>Chat với <%= employee.username %> - <%= employee.position %></h2>

        <div id="messages" class="d-flex flex-column">
            <!-- Tin nhắn sẽ được hiển thị ở đây -->
        </div>

        <div class="input-group">
            <input type="text" id="messageInput" class="form-control" placeholder="Nhập tin nhắn..." />
            <button id="sendMessage" class="btn btn-primary">
                <i class="mdi mdi-send"></i>
            </button>
        </div>
    </div>

    <!-- Bootstrap JS, Popper.js, and jQuery -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js" integrity="sha384-pzjw8f+ua7Kw1TIq0U1kJ5YkPfTp9cmBstlqp0z3Cp0H9EZ92HqIzkjZs94mVpoG" crossorigin="anonymous"></script>
    <script src="/socket.io/socket.io.js"></script>

    <script>
        const socket = io();

        // Khi người dùng gia nhập phòng chat
        const chatId = '<%= chatId %>';  // Sử dụng chatId từ server truyền xuống
        socket.emit('joinRoom', chatId);

        // Khi người dùng gửi tin nhắn
        document.getElementById('sendMessage').addEventListener('click', function () {
            const message = document.getElementById('messageInput').value;
            const username = '<%= employee.username %>';  // Tên người gửi

            if (message.trim()) {
                // Gửi tin nhắn đến server
                socket.emit('sendMessage', {
                    message: message,
                    chatId: chatId,   // Sử dụng chatId duy nhất
                    username: username
                });

                // Hiển thị tin nhắn của người dùng trên giao diện
                const messageElement = document.createElement('p');
                messageElement.classList.add('message', 'user');
                messageElement.textContent = `Bạn: ${message}`;
                document.getElementById('messages').appendChild(messageElement);

                // Cuộn xuống cuối các tin nhắn
                document.getElementById('messages').scrollTop = document.getElementById('messages').scrollHeight;

                // Xóa trường nhập liệu
                document.getElementById('messageInput').value = '';
            }
        });

        // Khi nhận được tin nhắn từ server
        socket.on('receiveMessage', (data) => {
            if (data.chatId === chatId) {  // Kiểm tra chatId
                const messageElement = document.createElement('p');
                messageElement.classList.add('message', data.username === '<%= employee.username %>' ? 'user' : 'other');
                messageElement.textContent = `${data.username}: ${data.message}`;

                document.getElementById('messages').appendChild(messageElement);

                // Cuộn xuống cuối các tin nhắn
                document.getElementById('messages').scrollTop = document.getElementById('messages').scrollHeight;
            }
        });
    </script>
</body>

</html>
